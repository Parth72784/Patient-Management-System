@model PatientManageSystem.Models.AppointmentManage

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Admin.cshtml";
}

    <div class="container mt-0">
        <div class="row breadcrumb-bar">
            <div class="col-md-6">
                <h3 class="block-title">Edit Appointment</h3>
            </div>
            <div class="col-md-6">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="index-2.html">
                            <span class="ti-home"></span>
                        </a>
                    </li>
                    <li class="breadcrumb-item">Appoinments</li>
                    <li class="breadcrumb-item active">Edit Appointment</li>
                </ol>
            </div>
        </div>
        <div>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

            <div class="module">
                <div class="module-body">
                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.RefPid, "Patient Name", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("RefPid", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RefPid, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.RefDid, "Dr Name", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("RefDid", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RefDid, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.AppointmentStartDate, "A.S.Date", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.AppointmentStartDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AppointmentStartDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.AppointmentEndDate, "A.E.Date", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.AppointmentEndDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AppointmentEndDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Purpose, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Purpose, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Purpose, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DocumentUpload, "DOC", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DocumentUpload, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DocumentUpload, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        @Html.HiddenFor(model => model.Aid)

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                   </div></div>
                    }

                    <div>
                        @Html.ActionLink("Back to List", "Index")
                    </div>
                </div>
            </div>